name: Rust

on: 
  pull_request:
    types: ['opened', 'edited', 'reopened', 'synchronize']

jobs:
  install_and_run_MIRAI:

    runs-on: ubuntu-latest

    steps:
    - name: Install Z3
      uses: pavpanchekha/setup-z3@v1.2
    - name: Checkout libra
      uses: actions/checkout@v2
      with:
        path: 'libra'
    - name: Checkout MIRAI
      uses: actions/checkout@v2
      with:
        repository: 'facebookexperimental/MIRAI'
        path: 'MIRAI'
    - name: Install MIRAI
      working-directory: ./MIRAI
      run: |
        rustup component add rustc-dev
        RUSTFLAGS='-Clink-arg=-L./binaries -Clink-arg=-lstdc++' cargo install --path ./checker
    - name: Build master then checkout PR
      working-directory: ./libra
      run: |
        rustup override set `cat ../MIRAI/rust-toolchain`
        rustup component add rustc-dev
        git fetch origin master
        git checkout master
        RUSTFLAGS="-Z always_encode_mir" cargo build
        git checkout -
    - name: Run MIRAI
      working-directory: ./libra
      run: | 
        rustup show
        RUSTC_WRAPPER=mirai RUSTFLAGS="-Z always_encode_mir" cargo build > ../mirai_results
    - name: Post Comment
      if: success()
      uses: actions/github-script@0.4.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require('fs');
          fs.readFile('mirai_results', 'utf-8', (err, data) => {
            if (err) {
              console.log("err:", err);
              return;
            }
            if (data) {
              github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: data
              });
            }
          });
